//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SimpraParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SimpraParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
internal interface ISimpraParserListener : IParseTreeListener
{
    /// <summary>
    /// Enter a parse tree produced by <see cref="SimpraParser.program"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterProgram([NotNull] SimpraParser.ProgramContext context);
    /// <summary>
    /// Exit a parse tree produced by <see cref="SimpraParser.program"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitProgram([NotNull] SimpraParser.ProgramContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>Identifier</c>
    /// labeled alternative in <see cref="SimpraParser.objectref"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterIdentifier([NotNull] SimpraParser.IdentifierContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>Identifier</c>
    /// labeled alternative in <see cref="SimpraParser.objectref"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitIdentifier([NotNull] SimpraParser.IdentifierContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>MemberAccess</c>
    /// labeled alternative in <see cref="SimpraParser.objectref"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterMemberAccess([NotNull] SimpraParser.MemberAccessContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>MemberAccess</c>
    /// labeled alternative in <see cref="SimpraParser.objectref"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitMemberAccess([NotNull] SimpraParser.MemberAccessContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>IndexAccess</c>
    /// labeled alternative in <see cref="SimpraParser.objectref"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterIndexAccess([NotNull] SimpraParser.IndexAccessContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>IndexAccess</c>
    /// labeled alternative in <see cref="SimpraParser.objectref"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitIndexAccess([NotNull] SimpraParser.IndexAccessContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>FunctionCall</c>
    /// labeled alternative in <see cref="SimpraParser.objectref"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterFunctionCall([NotNull] SimpraParser.FunctionCallContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>FunctionCall</c>
    /// labeled alternative in <see cref="SimpraParser.objectref"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitFunctionCall([NotNull] SimpraParser.FunctionCallContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>BinaryAnd</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterBinaryAnd([NotNull] SimpraParser.BinaryAndContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>BinaryAnd</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitBinaryAnd([NotNull] SimpraParser.BinaryAndContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>Unary</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterUnary([NotNull] SimpraParser.UnaryContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>Unary</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitUnary([NotNull] SimpraParser.UnaryContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>ChainedComparison</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterChainedComparison([NotNull] SimpraParser.ChainedComparisonContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>ChainedComparison</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitChainedComparison([NotNull] SimpraParser.ChainedComparisonContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>CString</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterCString([NotNull] SimpraParser.CStringContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>CString</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitCString([NotNull] SimpraParser.CStringContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>HasValue</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterHasValue([NotNull] SimpraParser.HasValueContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>HasValue</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitHasValue([NotNull] SimpraParser.HasValueContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>PascalString</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterPascalString([NotNull] SimpraParser.PascalStringContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>PascalString</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitPascalString([NotNull] SimpraParser.PascalStringContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>Array</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterArray([NotNull] SimpraParser.ArrayContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>Array</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitArray([NotNull] SimpraParser.ArrayContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>Parenthesis</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterParenthesis([NotNull] SimpraParser.ParenthesisContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>Parenthesis</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitParenthesis([NotNull] SimpraParser.ParenthesisContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>When</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterWhen([NotNull] SimpraParser.WhenContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>When</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitWhen([NotNull] SimpraParser.WhenContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>Number</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterNumber([NotNull] SimpraParser.NumberContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>Number</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitNumber([NotNull] SimpraParser.NumberContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>Bool</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterBool([NotNull] SimpraParser.BoolContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>Bool</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitBool([NotNull] SimpraParser.BoolContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>Comparison</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterComparison([NotNull] SimpraParser.ComparisonContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>Comparison</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitComparison([NotNull] SimpraParser.ComparisonContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>BinaryOr</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterBinaryOr([NotNull] SimpraParser.BinaryOrContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>BinaryOr</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitBinaryOr([NotNull] SimpraParser.BinaryOrContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>Binary</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterBinary([NotNull] SimpraParser.BinaryContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>Binary</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitBinary([NotNull] SimpraParser.BinaryContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>ObjectRef</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterObjectRef([NotNull] SimpraParser.ObjectRefContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>ObjectRef</c>
    /// labeled alternative in <see cref="SimpraParser.exp"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitObjectRef([NotNull] SimpraParser.ObjectRefContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>ExtraWhenExpr</c>
    /// labeled alternative in <see cref="SimpraParser.extraWhen"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterExtraWhenExpr([NotNull] SimpraParser.ExtraWhenExprContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>ExtraWhenExpr</c>
    /// labeled alternative in <see cref="SimpraParser.extraWhen"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitExtraWhenExpr([NotNull] SimpraParser.ExtraWhenExprContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>StatementBlock</c>
    /// labeled alternative in <see cref="SimpraParser.block"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterStatementBlock([NotNull] SimpraParser.StatementBlockContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>StatementBlock</c>
    /// labeled alternative in <see cref="SimpraParser.block"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitStatementBlock([NotNull] SimpraParser.StatementBlockContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>VariableDeclaration</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterVariableDeclaration([NotNull] SimpraParser.VariableDeclarationContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>VariableDeclaration</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitVariableDeclaration([NotNull] SimpraParser.VariableDeclarationContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>Assignment</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterAssignment([NotNull] SimpraParser.AssignmentContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>Assignment</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitAssignment([NotNull] SimpraParser.AssignmentContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>Return2</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterReturn2([NotNull] SimpraParser.Return2Context context);
    /// <summary>
    /// Exit a parse tree produced by the <c>Return2</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitReturn2([NotNull] SimpraParser.Return2Context context);
    /// <summary>
    /// Enter a parse tree produced by the <c>IfElseStatement</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterIfElseStatement([NotNull] SimpraParser.IfElseStatementContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>IfElseStatement</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitIfElseStatement([NotNull] SimpraParser.IfElseStatementContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>CompoundAssignment</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterCompoundAssignment([NotNull] SimpraParser.CompoundAssignmentContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>CompoundAssignment</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitCompoundAssignment([NotNull] SimpraParser.CompoundAssignmentContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>LineComment</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterLineComment([NotNull] SimpraParser.LineCommentContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>LineComment</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitLineComment([NotNull] SimpraParser.LineCommentContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>BlockComment</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterBlockComment([NotNull] SimpraParser.BlockCommentContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>BlockComment</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitBlockComment([NotNull] SimpraParser.BlockCommentContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>Directive</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterDirective([NotNull] SimpraParser.DirectiveContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>Directive</c>
    /// labeled alternative in <see cref="SimpraParser.statement"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitDirective([NotNull] SimpraParser.DirectiveContext context);
    /// <summary>
    /// Enter a parse tree produced by the <c>ExtraIfExpr</c>
    /// labeled alternative in <see cref="SimpraParser.extraIf"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void EnterExtraIfExpr([NotNull] SimpraParser.ExtraIfExprContext context);
    /// <summary>
    /// Exit a parse tree produced by the <c>ExtraIfExpr</c>
    /// labeled alternative in <see cref="SimpraParser.extraIf"/>.
    /// </summary>
    /// <param name="context">The parse tree.</param>
    void ExitExtraIfExpr([NotNull] SimpraParser.ExtraIfExprContext context);
}
